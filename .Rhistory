library(rphylopars)
install.packages(rphylopars)
install.packages("rphylopars")
install.packages("Rphylopars")
library(Rphylopars)
?Rphylopars::simtraits
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 20,
model = "BM",
nsim = 1
)
traits
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
traits
traits <- traits[[1]]
traits
sample(1:nrow(traits), 20)
traits[sample(1:nrow(traits), 20), 1] <- NA
tree <- phytools::pbtree(100)
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
tree = tree,
model = "BM",
nsim = 1
)
?phytools::pbtree
tree <- phytools::pbtree(n = 100)
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
tree = tree,
model = "BM",
nsim = 1
)
traits <- traits[[1]]
traits[sample(1:nrow(traits), 20), 1] <- NA
traits
?Rphylopars::phylopars
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
model = "BM"
)
knitr::opts_chunk$set(echo = TRUE)
traits
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
#tree = tree,
model = "BM",
nsim = 1
)
traits
traits <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
#tree = tree,
model = "BM",
nsim = 1
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
#tree = tree,
model = "BM",
nsim = 1
)
traits <- sim$trait_data
tree <- sim$sim_tree
tree
traits <- sim$trait_data
traits[sample(1:nrow(traits), 20), 1] <- NA
tree <- sim$sim_tree
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
model = "BM"
)
tree <- sim$tree
traits
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
traceback()
traits <- sim$trait_data
traits[sample(1:nrow(traits), 20), 1] <- NA
tree <- sim$tree
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 20,
model = "BM",
nsim = 1
)
traits <- sim$trait_data
traits[sample(1:nrow(traits), 20), 1] <- NA
tree <- sim$tree
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim_data <- simtraits(ntaxa = 15,ntraits = 4,nreps = 3,nmissing = 10)
# estimate parameters under Brownian motion
# pheno_error = TRUE assumes intraspecific variation
# pheno_correlated = FALSE assumes intraspecific variation is not correlated
# phylo_correlated = TRUE assumed traits are correlated
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,pheno_correlated = TRUE)
PPE
sim_data$trait_data
sim_data$tree
phylopars_res <- Rphylopars::phylopars(trait_data = traits,
tree = tree,
#model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 10,
model = "BM",
nsim = 1
)
phylopars_res <- Rphylopars::phylopars(trait_data = sim$trait_data,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 30,
model = "BM",
nsim = 1
)
phylopars_res <- Rphylopars::phylopars(trait_data = sim$trait_data,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
phylopars_res <- Rphylopars::phylopars(trait_data = sim$trait_data,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim$trait_data[sample(1:100, 30), 1] <- NA
phylopars_res <- Rphylopars::phylopars(trait_data = sim$trait_data,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 10,
model = "BM",
nsim = 1
)
sim$trait_data
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
sim$trait_data
sim$trait_data[, 1]
sim$trait_data[, 2]
sim$trait_data[sample(1:100, 30), 2] <- NA
phylopars_res <- Rphylopars::phylopars(trait_data = sim$trait_data,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
phylopars_res
phylopars_res$pars
phylopars_res$model
phylopars_res$npars
phylopars_res$mu
phylopars_res$anc_recon
phylopars_res$anc_recon[1:100]
phylopars_res$anc_recon
sim$tree
phylopars_res$anc_recon
phylopars_res$anc_recon
anc <- phylopars_res$anc_recon[1:100, ]
row.names(anc)
row.names(anc)anc
anc
cbind(anc[, 1],sim$trait_data[, 1])
cbind(anc[, 2],sim$trait_data[, 2])
trait <- sim$trait_data
trait[sample(1:100, 30), 2] <- NA
phylopars_res <- Rphylopars::phylopars(trait_data = trait,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
anc <- phylopars_res$anc_recon[1:100, ]
cbind(anc[, 2],sim$trait_data[, 2])
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
trait <- sim$trait_data
trait[sample(1:100, 30), 2] <- NA
phylopars_res <- Rphylopars::phylopars(trait_data = trait,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
anc <- phylopars_res$anc_recon[1:100, ]
cbind(anc[, 2],sim$trait_data[, 2])
obs_imput <- cbind(anc[, 2],sim$trait_data[, 2])
is.na(trait[, 2])
obs_imput[is.na(trait[, 2]), ]
nrow(obs_imput[is.na(trait[, 2]), ])
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,
model = "BM",
nsim = 1
)
trait <- sim$trait_data
trait[sample(1:100, 10), 2] <- NA
phylopars_res <- Rphylopars::phylopars(trait_data = trait,
tree = sim$tree,
model = "BM",
phylo_correlated = TRUE,
pheno_error = FALSE,
pheno_correlated = FALSE
)
anc <- phylopars_res$anc_recon[1:100, ]
obs_imput <- cbind(anc[, 2],sim$trait_data[, 2])
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 2],
y = sim$trait_data[, 1],
pch = 19)
sim$trait_data[, 2]
sim$trait_data[, 1]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19)
points(x = sim$trait_data[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 2],
pch = TRUE,
col = "red")
is.na(trait[, 2])
sim$trait_data[is.na(trait[, 2]), 3]
anc[is.na(trait[, 2]), 2]
points(x = sim$trait_data[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 2],
pch = TRUE,
col = "red")
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19)
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19)
points(x = sim$trait_data[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 2],
pch = TRUE,
col = "red")
anc[is.na(trait[, 2]), 2]
sim$trait_data[is.na(trait[, 2]), 3]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19)
points(x = sim$trait_data[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 2],
col = "red")
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(anc[, 2]), max(anc[, 2]))
)
points(x = obs_imput[is.na(trait[, 2]), 2],
y = obs_imput[is.na(trait[, 2]), 1]
col = "red")
points(x = obs_imput[is.na(trait[, 2]), 2],
y = obs_imput[is.na(trait[, 2]), 1],
col = "red")
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(anc[, 2]), max(anc[, 2]))
)
points(x = obs_imput[is.na(trait[, 2]), 2],
y = obs_imput[is.na(trait[, 2]), 1],
col = "red")
matrix(c(1, 0.6, 0.6, 1))
matrix(c(1, 0.6, 0.6, 1), nrow = 2)
sim <- Rphylopars::simtraits(ntaxa = 100,
ntraits = 2,
nreps = 1,
nmissing = 0,,
v = matrix(c(1, 0.6, 0.6, 1), nrow = 2),
model = "BM",
nsim = 1
)
trait <- sim$trait_data
trait[sample(1:100, 10), 2] <- NA
colnames(obs_imput) <- c("imputed", "original")
obs_imput[is.na(trait[, 2]), ]
anc[is.na(trait[, 2]), 1]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
?segments
obs_imput <- data.frame(imputed = anc[, 2], original = sim$trait_data[, 2], trait2 = sim$trait_data[, 2])
obs_imput
lapply(obs_imput[is.na(trait[, 2]), ] function(i) segments(x0 = i[, 3], y0 = i[, 2], x1 = x0 = i[, 3], y1 = i[, 1]))
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[, 3], y0 = i[, 2], x1 = x0 = i[, 3], y1 = i[, 1]))
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[, 3], y0 = i[, 2], x1 = i[, 3], y1 = i[, 1]))
obs_imput[is.na(trait[, 2]), ]
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1]))
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1]))
is.na(trait[, 2]), ]
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1]), col = "red")
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1], col = "red"))
obs_imput <- data.frame(imputed = anc[, 2], original = sim$trait_data[, 2], trait2 = sim$trait_data[, 3])
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1], col = "red"))
obs_imput <- data.frame(imputed = anc[, 1], original = sim$trait_data[, 2], trait2 = sim$trait_data[, 3])
obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1], col = "red"))
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(obs_imput[is.na(trait[, 2]), ], function(i) segments(x0 = i[3], y0 = i[2], x1 = i[3], y1 = i[1], col = "red"))
obs_imput[is.na(trait[, 2]), ][1, ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
obs_imput <- obs_imput[is.na(trait[, 2]), ]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
obs_imput[1, 3]
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
segments(x0 = obs_imput[1, 3], y0 = obs_imput[1, 2], x1 = obs_imput[1, 3], y1 = obs_imput[1, 1], col = "red")
plot(x = sim$trait_data[, 3],
y = sim$trait_data[, 2],
pch = 19,
ylim = c(min(sim$trait_data[, 2]), max(sim$trait_data[, 2]))
)
points(x = trait[is.na(trait[, 2]), 3],
y = anc[is.na(trait[, 2]), 1],
col = "red")
lapply(1:nrow(obs_imput), function(i) segments(x0 = obs_imput[i, 3], y0 = obs_imput[i, 2], x1 = obs_imput[i, 3], y1 = obs_imput[i, 1], col = "red")
)
tinytex::install_tinytex()
